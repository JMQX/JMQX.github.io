<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>江民钦的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-04-23T14:25:47.192Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JiangMinQin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法学习笔记-DP动态规划</title>
    <link href="http://yoursite.com/2017/04/23/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-DP%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>http://yoursite.com/2017/04/23/算法学习笔记-DP动态规划/</id>
    <published>2017-04-23T13:12:39.000Z</published>
    <updated>2017-04-23T14:25:47.192Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><blockquote>
<p>动态规划相信大家都知道，动态规划算法也是新手在刚接触算法设计时很苦恼的问题，有时候觉得难以理解，但是真正理解之后，就会觉得动态规划其实并没有想象中那么难。网上也有很多关于讲解动态规划的文章，大多都是叙述概念，讲解原理，让人觉得晦涩难懂，即使一时间看懂了，发现当自己做题的时候又会觉得无所适从。我觉得，理解算法最重要的还是在于练习，只有通过自己练习，才可以更快地提升。话不多说，接下来，下面我就通过一个例子来一步一步讲解动态规划是怎样使用的，只有知道怎样使用，才能更好地理解，而不是一味地对概念和原理进行反复琢磨。</p>
</blockquote>
<h3 id="总结，能用动规解决的问题的特点"><a href="#总结，能用动规解决的问题的特点" class="headerlink" title="总结，能用动规解决的问题的特点"></a>总结，能用动规解决的问题的特点</h3><ul>
<li>问题具有最优子结构性质。如果问题的最优解所包含的 子问题的解也是最优的，我们就称该问题具有最优子结 构性质。</li>
<li>无后效性。当前的若干个状态值一旦确定，则此后过程的演变就只和这若干个状态的值有关，和之前是采取哪种手段或经过哪条路径演变到当前的这若干个状态，没有关系。<a id="more"></a>
<h3 id="首先，我们来看一道题"><a href="#首先，我们来看一道题" class="headerlink" title="首先，我们来看一道题:"></a>首先，我们来看一道题:</h3><h6 id="数值三角形"><a href="#数值三角形" class="headerlink" title="数值三角形"></a>数值三角形</h6><blockquote>
<p>  7<br> 3 8<br>8 1 0<br>2 7 4 4<br>4 5 2 6 5</p>
</blockquote>
</li>
</ul>
<p>在上面的数字三角形中寻找一条从顶部到底边的路径，使得路径上所经过的数字之和最大。路径上的每一步都只能往左下或 右下走。只需要求出这个最大和即可，不必给出具体路径。 三角形的行数大于1小于等于100，数字为 0 - 99</p>
<p>输入格式：</p>
<pre><code>5      //表示三角形的行数    接下来输入三角形

7

3   8

8   1   0

2   7   4   4

4   5   2   6   5

要求输出最大和
</code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include&lt;cmath&gt;</div><div class="line">using namespace std;</div><div class="line">int main()&#123;</div><div class="line">	int n;</div><div class="line">	cin&gt;&gt;n;</div><div class="line">	int num[n][n];</div><div class="line">	for(int i=0;i&lt;n;i++)&#123;</div><div class="line">		for(int j=0;j&lt;i+1;j++)&#123;</div><div class="line">			cin&gt;&gt;num[i][j];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	for(int i=n-2;i&gt;=0;i--)&#123;</div><div class="line">		for(int j=0;j&lt;i+1;j++)&#123;</div><div class="line">			num[i][j]+=max(num[i+1][j],num[i+1][j+1]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	cout&lt;&lt;num[0][0];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;动态规划&quot;&gt;&lt;a href=&quot;#动态规划&quot; class=&quot;headerlink&quot; title=&quot;动态规划&quot;&gt;&lt;/a&gt;动态规划&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;动态规划相信大家都知道，动态规划算法也是新手在刚接触算法设计时很苦恼的问题，有时候觉得难以理解，但是真正理解之后，就会觉得动态规划其实并没有想象中那么难。网上也有很多关于讲解动态规划的文章，大多都是叙述概念，讲解原理，让人觉得晦涩难懂，即使一时间看懂了，发现当自己做题的时候又会觉得无所适从。我觉得，理解算法最重要的还是在于练习，只有通过自己练习，才可以更快地提升。话不多说，接下来，下面我就通过一个例子来一步一步讲解动态规划是怎样使用的，只有知道怎样使用，才能更好地理解，而不是一味地对概念和原理进行反复琢磨。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;总结，能用动规解决的问题的特点&quot;&gt;&lt;a href=&quot;#总结，能用动规解决的问题的特点&quot; class=&quot;headerlink&quot; title=&quot;总结，能用动规解决的问题的特点&quot;&gt;&lt;/a&gt;总结，能用动规解决的问题的特点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;问题具有最优子结构性质。如果问题的最优解所包含的 子问题的解也是最优的，我们就称该问题具有最优子结 构性质。&lt;/li&gt;
&lt;li&gt;无后效性。当前的若干个状态值一旦确定，则此后过程的演变就只和这若干个状态的值有关，和之前是采取哪种手段或经过哪条路径演变到当前的这若干个状态，没有关系。
    
    </summary>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Axios(JS HTTP库/Ajax库)基本用法</title>
    <link href="http://yoursite.com/2017/04/22/Axios-JS-HTTP%E5%BA%93-Ajax%E5%BA%93-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2017/04/22/Axios-JS-HTTP库-Ajax库-基本用法/</id>
    <published>2017-04-22T12:48:28.000Z</published>
    <updated>2017-04-23T14:28:26.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Axios-JS"><a href="#Axios-JS" class="headerlink" title="Axios-JS"></a>Axios-JS</h1><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>vue更新到2.0之后，作者就不再对vue-resource更新了，而是推荐使用Axios。Axios的特征是：</p>
<ul>
<li>在浏览器中发送 XMLHttpRequests 请求</li>
<li>比Jquery轻量，但处理请求不多时，可以使用</li>
<li>基于Promise语法标准</li>
<li>支持NodeJs</li>
<li>拦截请求和响应</li>
<li>自动转换JSON数据</li>
<li>客户端支持保护安全免受 XSRF 攻击<a id="more"></a>
<h2 id="安装-没有安装npm的可以直接安装nodejs，自带npm"><a href="#安装-没有安装npm的可以直接安装nodejs，自带npm" class="headerlink" title="安装(没有安装npm的可以直接安装nodejs，自带npm)"></a>安装(没有安装npm的可以直接安装nodejs，自带npm)</h2></li>
</ul>
<h6 id="安装到当前项目下："><a href="#安装到当前项目下：" class="headerlink" title="安装到当前项目下："></a>安装到当前项目下：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save axios vue-axios</div></pre></td></tr></table></figure>
<h6 id="或全局安装："><a href="#或全局安装：" class="headerlink" title="或全局安装："></a>或全局安装：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g axios vue-axios</div></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">import Vue from &apos;vue&apos;</div><div class="line">import axios from &apos;axios&apos;</div><div class="line">import VueAxios from &apos;vue-axios&apos;</div><div class="line">Vue.use(VueAxios,axios)</div></pre></td></tr></table></figure>
<p>##例子</p>
<h6 id="发送get请求"><a href="#发送get请求" class="headerlink" title="发送get请求"></a>发送get请求</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">axios.get(&apos;/user?ID=12345&apos;)</div><div class="line">  .then(function (response) &#123;</div><div class="line">    console.log(response);</div><div class="line">  &#125;)</div><div class="line">  .catch(function (response) &#123;</div><div class="line">    console.log(response);</div><div class="line">  &#125;);</div><div class="line">  //上下代码等同</div><div class="line">axios.get(&apos;/user&apos;, &#123;</div><div class="line">    params: &#123;</div><div class="line">      ID: 12345</div><div class="line">    &#125;</div><div class="line">  &#125;)</div><div class="line">  .then(function (response) &#123;</div><div class="line">    console.log(response);</div><div class="line">  &#125;)</div><div class="line">  .catch(function (response) &#123;</div><div class="line">    console.log(response);</div><div class="line">  &#125;);</div></pre></td></tr></table></figure>
<h6 id="发送post请求"><a href="#发送post请求" class="headerlink" title="发送post请求"></a>发送post请求</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">axios.post(&apos;/user&apos;, &#123;</div><div class="line">    firstName: &apos;Fred&apos;,</div><div class="line">    lastName: &apos;Flintstone&apos;</div><div class="line">  &#125;)</div><div class="line">  .then(function (response) &#123;</div><div class="line">    console.log(response);</div><div class="line">  &#125;)</div><div class="line">  .catch(function (response) &#123;</div><div class="line">    console.log(response);</div><div class="line">  &#125;);</div></pre></td></tr></table></figure>
<h6 id="发送多个并发请求"><a href="#发送多个并发请求" class="headerlink" title="发送多个并发请求"></a>发送多个并发请求</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">  function getUserAccount() &#123;</div><div class="line">  return axios.get(&apos;/user/12345&apos;);</div><div class="line">&#125;</div><div class="line">function getUserPermissions() &#123;</div><div class="line">  return axios.get(&apos;/user/12345/permissions&apos;);</div><div class="line">&#125;</div><div class="line">axios.all([getUserAccount(), getUserPermissions()])</div><div class="line">  .then(axios.spread(function (acct, perms) &#123;</div><div class="line">    // Both requests are now complete</div><div class="line">  &#125;));</div></pre></td></tr></table></figure>
<h6 id="可以通过给axios传递参数来制定请求"><a href="#可以通过给axios传递参数来制定请求" class="headerlink" title="可以通过给axios传递参数来制定请求"></a>可以通过给axios传递参数来制定请求</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">axios(&#123;</div><div class="line">  method: &apos;post&apos;,</div><div class="line">  url: &apos;/user/12345&apos;,</div><div class="line">  data: &#123;</div><div class="line">    firstName: &apos;Fred&apos;,</div><div class="line">    lastName: &apos;Flintstone&apos;</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h6 id="在Vue中使用"><a href="#在Vue中使用" class="headerlink" title="在Vue中使用"></a>在Vue中使用</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Vue.axios.get(api).then((response) =&gt; &#123;</div><div class="line">  console.log(response.data)</div><div class="line">&#125;)</div><div class="line">this.axios.get(api).then((response) =&gt; &#123;</div><div class="line">  console.log(response.data)</div><div class="line">&#125;)</div><div class="line">this.$http.get(api).then((response) =&gt; &#123;</div><div class="line">  console.log(response.data)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="设置axios全局默认值"><a href="#设置axios全局默认值" class="headerlink" title="设置axios全局默认值"></a>设置axios全局默认值</h3><p>您可以指定将应用于每个请求的配置默认值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">axios.defaults.baseURL = &apos;https:/*api.example.com&apos;;</div><div class="line">axios.defaults.headers.common[&apos;Authorization&apos;] = AUTH_TOKEN;</div><div class="line">axios.defaults.headers.post[&apos;Content-Type&apos;] = &apos;application/x-www-form-urlencoded&apos;;</div></pre></td></tr></table></figure>
<h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><p>你可以截取请求或响应在被 then 或者 catch 处理之前</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">/*添加请求拦截器*/</div><div class="line">axios.interceptors.request.use(function(config)&#123;  </div><div class="line">     /*在发送请求之前做某事*/</div><div class="line">     return config;</div><div class="line">   &#125;，function(error)&#123;</div><div class="line">     /*请求错误时做些事*/</div><div class="line">     return Promise.reject(error);</div><div class="line">   &#125;);</div><div class="line">/*添加响应拦截器*/</div><div class="line">axios.interceptors.response.use(function(response)&#123; </div><div class="line">     /*对响应数据做些事*/</div><div class="line">      return response;</div><div class="line">   &#125;，function(error)&#123;</div><div class="line">     /*请求错误时做些事*/</div><div class="line">     return Promise.reject(error);</div><div class="line">   &#125;); </div><div class="line">/*如果你以后可能需要删除拦截器。*/</div><div class="line">var myInterceptor = axios.interceptors.request.use(function()&#123;/*...*/&#125;);</div><div class="line">axios.interceptors.request.eject(myInterceptor);</div></pre></td></tr></table></figure>
<h3 id="取消请求"><a href="#取消请求" class="headerlink" title="取消请求"></a>取消请求</h3><p>您可以使用取消令牌取消请求。<br>您可以使用CancelToken.source工厂创建一个取消令牌，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">var CancelToken = axios.CancelToken;</div><div class="line">var source = CancelToken.source();</div><div class="line">axios.get(&apos;/user/12345&apos;, &#123;</div><div class="line">  cancelToken: source.token</div><div class="line">&#125;).catch(function(thrown)&#123;</div><div class="line">  if (axios.isCancel(thrown)) &#123;</div><div class="line">    console.log(&apos;Request canceled&apos;, thrown.message);</div><div class="line">  &#125; else &#123;</div><div class="line">    /* 处理错误*/</div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line">/*取消请求(消息参数是可选的)*/</div><div class="line">source.cancel(&apos;操作被用户取消。&apos;);</div></pre></td></tr></table></figure></p>
<p>您还可以通过将执行器函数传递给CancelToken构造函数来创建取消令牌：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var CancelToken = axios.CancelToken;</div><div class="line">var cancel;</div><div class="line">axios.get(&apos;/ user / 12345&apos;，&#123;</div><div class="line">   cancelToken：new CancelToken(functionexecutor(c)&#123;</div><div class="line">     /*一个执行器函数接收一个取消函数作为参数*/</div><div class="line">     cancel = c;</div><div class="line">   &#125;)</div><div class="line">&#125;);</div><div class="line">/* 取消请求*/</div><div class="line">clear();</div></pre></td></tr></table></figure>
<p>注意：您可以使用相同的取消令牌取消几个请求。</p>
<p>axios在很大程度上受到Angular提供的$http服务的启发。 最终，axios努力提供一个在Angular外使用的独立的$http-like服务。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Axios-JS&quot;&gt;&lt;a href=&quot;#Axios-JS&quot; class=&quot;headerlink&quot; title=&quot;Axios-JS&quot;&gt;&lt;/a&gt;Axios-JS&lt;/h1&gt;&lt;h2 id=&quot;特征&quot;&gt;&lt;a href=&quot;#特征&quot; class=&quot;headerlink&quot; title=&quot;特征&quot;&gt;&lt;/a&gt;特征&lt;/h2&gt;&lt;p&gt;vue更新到2.0之后，作者就不再对vue-resource更新了，而是推荐使用Axios。Axios的特征是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在浏览器中发送 XMLHttpRequests 请求&lt;/li&gt;
&lt;li&gt;比Jquery轻量，但处理请求不多时，可以使用&lt;/li&gt;
&lt;li&gt;基于Promise语法标准&lt;/li&gt;
&lt;li&gt;支持NodeJs&lt;/li&gt;
&lt;li&gt;拦截请求和响应&lt;/li&gt;
&lt;li&gt;自动转换JSON数据&lt;/li&gt;
&lt;li&gt;客户端支持保护安全免受 XSRF 攻击
    
    </summary>
    
    
      <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>入手GitHub+Hexo博客必备:MarkDown语法</title>
    <link href="http://yoursite.com/2017/04/19/%E5%85%A5%E6%89%8BGitHub-Hexo%E5%8D%9A%E5%AE%A2%E5%BF%85%E5%A4%87-MarkDown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/04/19/入手GitHub-Hexo博客必备-MarkDown语法/</id>
    <published>2017-04-19T14:06:06.000Z</published>
    <updated>2017-04-22T13:54:32.789Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://jmqx.github.io/img/markDown.jpg" alt="MarkDown"></p>
<ol>
<li><p>标题设置（让字体变大，和word的标题意思一样）<br>在Markdown当中设置标题，有两种方式：<br>第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。<br>第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）<a id="more"></a></p>
</li>
<li><p>块注释（blockquote）<br>通过在文字开头添加“&gt;”表示块注释。（当&gt;和文字之间添加五个blank时，块注释的文字会有变化。）</p>
</li>
<li><p>斜体<br>将需要设置为斜体的文字两端使用1个“*”或者“_”夹起来</p>
</li>
<li><p>粗体<br>将需要设置为斜体的文字两端使用2个“*”或者“_”夹起来</p>
</li>
<li><p>无序列表<br>在文字开头添加(<em>, +, and -)实现无序列表。但是要注意在(</em>, +, and -)和文字之间需要添加空格。（建议：一个文档中只是用一种无序列表的表示方式）</p>
</li>
<li><p>有序列表<br>使用数字后面跟上句号。（还要有空格）</p>
</li>
<li><p>链接（Links）<br>Markdown中有两种方式，实现链接，分别为内联方式和引用方式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">内联方式：This is an [example link](http://example.com/).</div><div class="line"></div><div class="line">引用方式：</div><div class="line">I get 10 times more traffic from [Google][1] than from [Yahoo][2] or [MSN][3].</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>[1]: <a href="http://google.com/" target="_blank" rel="external">http://google.com/</a>        “Google” </p>
<p>[2]: <a href="http://search.yahoo.com/" target="_blank" rel="external">http://search.yahoo.com/</a>  “Yahoo Search” </p>
<p>[3]: <a href="http://search.msn.com/" target="_blank" rel="external">http://search.msn.com/</a>    “MSN Search”</p>
</blockquote>
<ol>
<li>图片（Images）<br>图片的处理方式和链接的处理方式，非常的类似。<blockquote>
<p>内联方式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![alt text](/path/to/img.jpg &quot;Title&quot;)</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ol>
<blockquote>
<p>引用方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![alt text][id]</div><div class="line">[id]: /path/to/img.jpg &quot;Title&quot;</div></pre></td></tr></table></figure></p>
</blockquote>
<ol>
<li><p>代码（HTML中所谓的Code）<br>实现方式有两种：<br>第一种：简单文字出现一个代码框。使用<code>&lt;blockquote&gt;</code>。（<code>不是单引号而是左上角的ESC下面~中的</code>）<br>第二种：大片文字需要实现代码框。使用Tab和四个空格。</p>
</li>
<li><p>脚注（footnote）<br>实现方式如下：<br>hello[^hello]</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[^hello]: hi</div></pre></td></tr></table></figure>
<ol>
<li>下划线<br>在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://jmqx.github.io/img/markDown.jpg&quot; alt=&quot;MarkDown&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;标题设置（让字体变大，和word的标题意思一样）&lt;br&gt;在Markdown当中设置标题，有两种方式：&lt;br&gt;第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。&lt;br&gt;第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）
    
    </summary>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>hello hexo</title>
    <link href="http://yoursite.com/2017/04/18/hello-hexo/"/>
    <id>http://yoursite.com/2017/04/18/hello-hexo/</id>
    <published>2017-04-18T14:20:06.000Z</published>
    <updated>2017-04-18T14:34:37.200Z</updated>
    
    <content type="html"><![CDATA[<p>#Hello Hexo</p>
<p><img src="https://jmqx.github.io/images/hexo.jpg" alt="head" title="hexo"><br>很久以前就想搭建一个个人技术博客的网站了，但是那时候接触的东西不多，没有听说过hexo、jekyll、wordpress等快速blog生成工具，自己在网上找了博客模板，修改了一下前端代码，用eclipse基于jsp搭建了一个小型博客发布到阿里云，但是时间久了发现自己写的代码不稳定，经常获取不到数据库数据，于是放弃了做个人博客网站的想法。</p>
<p>后来听说了hexo，但是一直没有定下心去看官方文档，于是搭博客网站的想法再一次不了了之。今晚闲暇，实在不知道该干什么，于是捡起了搭博客的想法，入门了hexo搭建github博客，现在记录下来，也算是作个念象，给想要搭建个人博客网站的小伙伴们一个参考。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#Hello Hexo&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://jmqx.github.io/images/hexo.jpg&quot; alt=&quot;head&quot; title=&quot;hexo&quot;&gt;&lt;br&gt;很久以前就想搭建一个个人技术博客的网站了，但是那时候接触的东西不多，没有听说过h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/04/18/hello-world/"/>
    <id>http://yoursite.com/2017/04/18/hello-world/</id>
    <published>2017-04-18T09:53:59.501Z</published>
    <updated>2017-04-22T13:54:55.369Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a><br><a id="more"></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo generate&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot;&gt;Generating&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
